[tox]
requires =
    tox>=4
isolated_build = true
envlist =  py{310,311,312}, py{310,311,312}-{orjson, msgpack, pyyaml, ruamel}, pre-commit, mypy, build

[gh]
python =
    3.10 = py310
    3.11 = py311, pre-commit, mypy
    3.12 = py312

[testenv]
description = run unit tests
labels = test
package = wheel
allowlist_externals =
    poetry
passenv = *
commands =
    poetry install --only test --no-root
    poetry run pytest --cov=pyoak --cov-branch --cov-report=xml --cov-report=term-missing tests

[testenv:py{310,311}-orjson]
extras = orjson
commands =
    poetry install --only "test" --no-root --extras "orjson"
    poetry run pytest tests -m dep_orjson

[testenv:py{310,311}-msgpack]
extras = msgpack
commands =
    poetry install --only "test" --no-root --extras "msgpack"
    poetry run pytest tests -m dep_msgpack

[testenv:py{310,311}-pyyaml]
extras = yaml
commands =
    poetry install --only "test" --no-root --extras "yaml"
    poetry run pytest tests -m dep_pyyaml

[testenv:py{310,311}-ruamel]
deps = ruamel.yaml
commands =
    poetry install --only "test" --no-root
    poetry run pytest tests -m dep_ruamel

[testenv:pre-commit]
description = run pre-commit hooks (linters, formatters, etc.)
labels = lint
skip_install = true
allowlist_externals =
    poetry
commands =
    poetry install --only pre --no-root
    poetry run pre-commit run --all-files

[testenv:mypy]
description = run mypy static type checker
labels = lint
skip_install = true
allowlist_externals =
    poetry
commands =
    poetry install --only "main, mypy, test" --no-root
    poetry run mypy src tests

[testenv:build]
description = build package & test distribution
labels = build
skip_install = true
allowlist_externals =
    poetry
commands =
    poetry install --only publish
    poetry build
    poetry run twine check dist/*
