# Publish package on main branch if it's tagged with 'v*'

name: release & publish workflow

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

jobs:
  # Test again before publishing
  test:
    strategy:
      matrix:
        python-versions: ["3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install poetry
        run: |
          pip install poetry==1.5.1
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --only dev --no-root

      - name: test with tox
        run: poetry run tox

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: |
          pip install poetry==1.5.1
          poetry config virtualenvs.in-project true

      - name: Build wheels and source tarball
        run: |
          poetry build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - name: Set pre-release flag
        id: pre_release
        run: |
          if [[ ${{ steps.tag_name.outputs.current_version }} =~ (a|b|rc) ]]; then
            echo ::set-output name=pre_release::true
          else
            echo ::set-output name=pre_release::false
          fi
        shell: bash

      - uses: actions/checkout@v3

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      - name: create github release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: ${{ steps.changelog_reader.outputs.changes }}
          files: dist/*.whl
          draft: false
          prerelease: ${{ steps.pre_release.pre_release }}

  publish:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/project/pyoak
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
